{"version":3,"sources":["webpack:///./src/components/SEO/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Site/Site.js","webpack:///./propTypes/fluidImage.js","webpack:///./src/components/SiteList/SiteList.js","webpack:///./src/components/ContactForm/input/Input.js","webpack:///./src/components/ContactForm/ContactForm.js","webpack:///./src/components/Contact/Contact.js","webpack:///./src/pages/index.js","webpack:///./src/components/Container/index.js","webpack:///./src/components/Container/Container.js","webpack:///./src/components/SEO/SEO.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["SEO","StaticQueryContext","loader","enqueue","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","react_default","a","createElement","Fragment","StaticQuery","props","children","Consumer","Site","shape","childImageSharp","fluid","aspectRatio","number","src","string","srcSet","sizes","_ref$frontmatter","frontmatter","title","image","skills","url","html","className","Container","gatsby_image_default","alt","length","join","href","target","defaultProps","SiteList","edges","allMarkdownRemark","id","map","_ref2","_ref2$node","node","components_Site_Site","key","components_SiteList_SiteList","gatsby_browser_entry_StaticQuery","SiteList_SiteList","Object","assign","_3458205488","Input","type","error","_objectWithoutPropertiesLoose","Type","classnames","input--error","ContactForm","_useState","useState","submitted","setSubmitted","validationSchema","Yup","fullName","required","emailAddress","message","fields","label","formik_esm","onSubmit","values","setSubmitting","console","log","handleSubmit","errors","handleChange","handleBlur","isSubmitting","field","camelCase","input_Input","onChange","onBlur","name","defaultValue","placeholder","disabled","Contact","Container_Container","components_ContactForm_ContactForm","IndexPage","Layout","components_SEO","components_Contact_Contact","_Container__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","Header","siteTitle","anchor_link_default","_856328897","components_Header","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-index-js-e84afbc8250f9f7552dc.js","sourcesContent":["import SEO from \"./SEO\"\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport Container from '../Container';\nimport fluidImage from '../../../propTypes/fluidImage';\nimport './site.scss';\n\n// <div dangerouslySetInnerHTML={{ __html: html }} />\nconst Site = ({ frontmatter: { title, image, skills, url }, html }) => (\n  <div className=\"site\">\n    <Container>\n      <div className=\"site__container\">\n        <div className=\"site__image\">\n          <Img fluid={image.childImageSharp.fluid} alt={title} />\n        </div>\n        <div className=\"site__info\">\n          <h2>{title}</h2>\n          {skills && skills.length ? (\n            <div className=\"site__technology\">\n              <h5>Technology used:</h5>\n              <p>{skills.join(', ')}</p>\n            </div>\n          ) : (\n            ''\n          )}\n          {url ? (\n            <a className=\"site__visit\" href={url} target=\"__blank\">\n              Visit site\n            </a>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    </Container>\n  </div>\n);\n\nSite.propTypes = {\n  frontmatter: PropTypes.shape({\n    title: PropTypes.string,\n    image: fluidImage,\n    skills: PropTypes.arrayOf(PropTypes.string),\n    url: PropTypes.string,\n  }),\n  html: PropTypes.string,\n};\n\nSite.defaultProps = {\n  frontmatter: {\n    skills: [],\n    url: '',\n  },\n  html: '',\n};\n\nexport default Site;\n","import { shape, number, string } from 'prop-types';\n\nexport default shape({\n  childImageSharp: shape({\n    fluid: shape({\n      aspectRatio: number,\n      src: string,\n      srcSet: string,\n      sizes: string,\n    }),\n  }),\n});\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Site from '../Site/Site';\nimport './sitelist.scss';\n\nconst SiteList = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <div className=\"site__list\" id=\"sites\">\n    {edges.map(({ node: { id, frontmatter, html } }) => (\n      <Site key={id} frontmatter={frontmatter} html={html} />\n    ))}\n\n    <p className=\"site__note\">\n      Please note that site designs may differ from the screenshots.\n    </p>\n  </div>\n);\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          filter: { fileAbsolutePath: { regex: \"/sites/\" } }\n        ) {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                image {\n                  childImageSharp {\n                    resize(width: 1500, height: 1500) {\n                      src\n                    }\n                    fluid(maxWidth: 786) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n                skills\n                url\n              }\n              html\n            }\n          }\n        }\n      }\n    `}\n    render={data => <SiteList data={data} {...props} />}\n  />\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport './input.scss';\n\nconst Input = ({ type, error, ...props }) => {\n  const Type = type === 'textarea' ? 'textarea' : 'input';\n\n  return (\n    <div className=\"input__container\">\n      <Type type=\"text\" className={classnames('input', { 'input--error': error })} {...props} />\n      {error && <span className=\"input__error\">{error}</span>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { camelCase } from 'lodash';\nimport Input from './input/Input';\nimport './contactform.scss';\n\nconst ContactForm = () => {\n  const [submitted, setSubmitted] = useState(false);\n\n  const validationSchema = Yup.object().shape({\n    fullName: Yup.string().required('Please enter your name.'),\n    emailAddress: Yup.string().required('Please enter your email.'),\n    message: Yup.string().required('Please enter your message.'),\n  });\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    console.log('handleSubmit', values);\n\n    // TODO: do something with the message.\n\n    setSubmitted(true);\n\n    setSubmitting(false);\n  };\n\n  const fields = [\n    { label: 'Full name' },\n    { label: 'Email address' },\n    { label: 'Message', type: 'textarea' },\n  ];\n\n  return (\n    <div className=\"contact-form\">\n      {!submitted ? (\n        <Formik\n          onSubmit={handleSubmit}\n          validationSchema={validationSchema}\n          render={({\n            values,\n            handleSubmit,\n            errors,\n            handleChange,\n            handleBlur,\n            isSubmitting,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              {fields.map(field => {\n                const id = camelCase(field.label);\n\n                return (\n                  <Input\n                    key={id}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    id={id}\n                    name={id}\n                    type={field.type}\n                    defaultValue={values[id]}\n                    placeholder={field.label}\n                    error={errors[id]}\n                  />\n                );\n              })}\n\n              <button\n                type=\"submit\"\n                className=\"contact-form__submit block-link block-link--chevron\"\n                disabled={isSubmitting}\n              >\n                Send it!\n              </button>\n            </form>\n          )}\n        />\n      ) : (\n        <p>\n          Thank you for contacting me. I will aim to get back to you within 48\n          hours.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport './contact.scss';\n\nconst Contact = () => (\n  <div className=\"contact\" id=\"contact\">\n    <Container>\n      <h2>Contact Me</h2>\n      <p>\n        Please feel free to contact me below to talk about a project or work\n        you'd like done.\n      </p>\n\n      <ContactForm />\n    </Container>\n  </div>\n);\n\nexport default Contact;\n","import React from 'react';\nimport Layout from '../components/Layout/Layout';\nimport SEO from '../components/SEO';\nimport SiteList from '../components/SiteList/SiteList';\nimport Contact from '../components/Contact/Contact';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n\n    <SiteList />\n\n    <Contact />\n  </Layout>\n);\n\nexport default IndexPage;\n","import Container from \"./Container\"\n\nexport default Container\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './container.scss';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: \"description\",\n          content: metaDescription,\n        },\n        {\n          property: \"og:title\",\n          content: title,\n        },\n        {\n          property: \"og:description\",\n          content: metaDescription,\n        },\n        {\n          property: \"og:type\",\n          content: \"website\",\n        },\n        {\n          name: \"twitter:card\",\n          content: \"summary\",\n        },\n        {\n          name: \"twitter:creator\",\n          content: site.siteMetadata.author,\n        },\n        {\n          name: \"twitter:title\",\n          content: title,\n        },\n        {\n          name: \"twitter:description\",\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  description: \"\",\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport './header.scss';\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <Container>\n      <h1>{siteTitle}</h1>\n\n      <nav>\n        <ul>\n          <li>\n            <AnchorLink href=\"#sites\">Work</AnchorLink>\n          </li>\n          <li>\n            <AnchorLink href=\"#contact\">Contact</AnchorLink>\n          </li>\n        </ul>\n      </nav>\n    </Container>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import Header from \"./Header\"\n\nexport default Header\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Header from '../Header';\nimport './reset.scss';\nimport './app.scss';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <React.Fragment>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n    </React.Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}