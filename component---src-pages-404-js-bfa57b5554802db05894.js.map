{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/Container/index.js","webpack:///./src/components/Container/Container.js","webpack:///./src/components/SEO/SEO.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","_Container__WEBPACK_IMPORTED_MODULE_0__","Container","_ref","children","className","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","react_default","anchor_link_default","href","Layout","_856328897","Fragment","components_Header"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJ,IAAAE,EAAAZ,EAAA,KAEea,MAAf,oCCFA,IAAAV,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAH,EAAA,KAUea,IANG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkBX,EAAAK,EAAAC,cAAA,OAAKM,UAAU,aAAaD,kKCChE,SAASE,EAATH,GAAiD,IAAlCI,EAAkCJ,EAAlCI,YAAaC,EAAqBL,EAArBK,KAAMC,EAAeN,EAAfM,KAAMT,EAASG,EAATH,MAC9BU,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAjB,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,eAAgB,CACdT,QAEFR,MAAOA,EACPkB,cAAa,QAAUR,EAAKI,aAAad,MACzCS,KAAM,CACJ,CACEU,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,WACVD,QAASpB,GAEX,CACEqB,SAAU,iBACVD,QAASP,GAEX,CACEQ,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAM,gBACNC,QAASpB,GAEX,CACEmB,KAAM,sBACNC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD,mPC1ETmB,UAAS,SAAAtB,GAAA,IAAGuB,EAAHvB,EAAGuB,UAAH,OACbC,EAAA7B,EAAAC,cAAA,UAAQM,UAAU,UAChBsB,EAAA7B,EAAAC,cAACG,EAAA,EAAD,KACEyB,EAAA7B,EAAAC,cAAA,UAAK2B,GAELC,EAAA7B,EAAAC,cAAA,WACE4B,EAAA7B,EAAAC,cAAA,UACE4B,EAAA7B,EAAAC,cAAA,UACE4B,EAAA7B,EAAAC,cAAC6B,EAAA9B,EAAD,CAAY+B,KAAK,UAAjB,SAEFF,EAAA7B,EAAAC,cAAA,UACE4B,EAAA7B,EAAAC,cAAC6B,EAAA9B,EAAD,CAAY+B,KAAK,YAAjB,kBAYZJ,EAAOD,aAAe,CACpBE,UAAW,IAGED,IC/BAA,ED+BAA,gBEHAK,IAvBA,SAAA3B,GAAkB,IAAfC,EAAeD,EAAfC,SACVQ,EAAImB,EAAAnB,KAUV,OACEe,EAAA7B,EAAAC,cAAC4B,EAAA7B,EAAMkC,SAAP,KACEL,EAAA7B,EAAAC,cAACkC,EAAD,CAAQP,UAAWd,EAAKF,KAAKI,aAAad,QAC1C2B,EAAA7B,EAAAC,cAAA,YAAOK","file":"component---src-pages-404-js-bfa57b5554802db05894.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/Layout/Layout\"\nimport SEO from \"../components/SEO/SEO\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import Container from \"./Container\"\n\nexport default Container\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './container.scss';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: \"description\",\n          content: metaDescription,\n        },\n        {\n          property: \"og:title\",\n          content: title,\n        },\n        {\n          property: \"og:description\",\n          content: metaDescription,\n        },\n        {\n          property: \"og:type\",\n          content: \"website\",\n        },\n        {\n          name: \"twitter:card\",\n          content: \"summary\",\n        },\n        {\n          name: \"twitter:creator\",\n          content: site.siteMetadata.author,\n        },\n        {\n          name: \"twitter:title\",\n          content: title,\n        },\n        {\n          name: \"twitter:description\",\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  description: \"\",\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport './header.scss';\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <Container>\n      <h1>{siteTitle}</h1>\n\n      <nav>\n        <ul>\n          <li>\n            <AnchorLink href=\"#sites\">Work</AnchorLink>\n          </li>\n          <li>\n            <AnchorLink href=\"#contact\">Contact</AnchorLink>\n          </li>\n        </ul>\n      </nav>\n    </Container>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import Header from \"./Header\"\n\nexport default Header\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Header from '../Header';\nimport './reset.scss';\nimport './app.scss';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <React.Fragment>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n    </React.Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}